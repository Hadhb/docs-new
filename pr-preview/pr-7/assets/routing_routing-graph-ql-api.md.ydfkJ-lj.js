import{_ as s,c as i,o as a,U as n}from"./chunks/framework.oLuOuILP.js";const F=JSON.parse('{"title":"Routing Graph QL API","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Routing Graph QL API | XDEFI Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"routing/routing-graph-ql-api.md","filePath":"routing/routing-graph-ql-api.md","lastUpdated":1710218899000}'),t={name:"routing/routing-graph-ql-api.md"},e=n(`<h1 id="routing-graph-ql-api" tabindex="-1">Routing Graph QL API <a class="header-anchor" href="#routing-graph-ql-api" aria-label="Permalink to &quot;Routing Graph QL API&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#routing-schema">Routing schema</a></li><li><a href="#querying-the-graph-ql-endpoint">Querying the Graph QL endpoint</a></li></ul></nav><p>The Routing Graph QL schema offers queries and mutations to generate routes and the subsequent transaction(s) hex data necessary to accomplish them, to be signed and broadcast on chain.</p><p>Additionally, &quot;helper&quot; queries are available to get information about available chains and tokens to swap from or to.</p><h2 id="routing-schema" tabindex="-1">Routing schema <a class="header-anchor" href="#routing-schema" aria-label="Permalink to &quot;Routing schema&quot;">​</a></h2><p>In this section, we present the Graph QL schema upon which the routing API is built. The schema gives the full picture of what data can be queried with what parameters. Here&#39;s a list of publicly available queries (root view):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RoutingTypeV2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  tokenV2(id:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): RoutingTokenTypeV2!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  tokensV2(names:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [String!] = null, tokenIds: [String!] = null): [RoutingTokenTypeV2!]!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  bridgeableTokens(bridgeToken:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BridgeTokenInput</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> null,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tokenId:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): [RoutingTokenTypeV2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  routeV2(srcToken:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String!,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> destToken:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String!,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> amountSource:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> slippage:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String!,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> addresses:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [AddressRouteInputTypeV2!]!, destAddress: String!, infiniteApproval: Boolean, referral: ReferralInputType): RouteTypeV2!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  chainsV2:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [RoutingChainTypeV2!]!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  chainV2(name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): RoutingChainTypeV2!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  tradeV2(tradeId:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): RouteTransactionTradeTypeV2!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  tradesV2(routeId:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): [RouteTransactionTradeTypeV2!]!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  addressCheckV2(address:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AddressRouteInputTypeV2!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): AddressRouteCheckTypeV2!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  referrerSummary:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ReferralFeeSummary!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  dailyVolume(startDate:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String!</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2023-01-10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): [VolumeHistory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><ul><li><code>tokenV2</code> and <code>tokensV2</code> queries fetch information about specific token(s) given an <code>id</code> or a \`name (list of names)</li><li><code>chainV2</code> and <code>chainsV2</code> fetch info about a given chain or all available chains and assets available in them</li><li><code>bridgeableTokens</code> fetches a list of chains&#39; assets one can bridge to given an input token belonging to a source chain</li><li><code>addressCheckV2</code> will verify the address belonging to a given chain is correct</li><li><code>referrerSummary</code> will return referral data if the requester is part of the programme</li><li><code>dailyVolume</code> returns daily volumes of swaps facilitated through XDEFI&#39;s Routing API</li><li><code>routeV2</code> finds the best route to swap from <code>srcToken</code> to <code>destToken</code></li><li><code>tradeV2</code> and \`tradesV2 will fetch trade(s) associated to a given ID</li></ul></div><p>In addition to the above read-only operations, mutations are made available to add new routes and trades, and alter transactions statuses.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Mutation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  transactionsV2(routeData:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RouteInputTypeV2!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): PostRouteTypeV2!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  transactionHashV2(routeId:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String!,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tradeId:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String!,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transactionHash:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> String!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): String!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  claimFees:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ClaimStatus</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><ul><li><code>transactionsV2</code> generates trade and route records in the database</li><li><code>transactionHashV2</code> generates trade status and route status records in the database</li><li><code>claimFees</code> generates a fee claim request (if you&#39;re part of the referral programme)</li></ul></div><h2 id="querying-the-graph-ql-endpoint" tabindex="-1">Querying the Graph QL endpoint <a class="header-anchor" href="#querying-the-graph-ql-endpoint" aria-label="Permalink to &quot;Querying the Graph QL endpoint&quot;">​</a></h2><p>This endpoint is similar to the ones discussed earlier but needs extra parameters, and sometimes a header with authentication token, to perform certain read/write operations (queries vs. mutations).</p><p>Querying this endpoint to fetch the list of tokens/chains one can bridge to from <code>ETH.USDC</code> would look like this in Python:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-CuRR2" id="tab-34935CY" checked="checked"><label for="tab-34935CY">Request</label><input type="radio" name="group-CuRR2" id="tab-OuDvoGI"><label for="tab-OuDvoGI">Response</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GRAPHQL_ENDPOINT = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://gql-router.staging.xdefiservices.com/graphql&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">query = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">query BridgeableTokens($bridgeToken: BridgeTokenInput) </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  routingV2 {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bridgeableTokens(bridgeToken: $bridgeToken) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      asset {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        chain</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">vars = </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;bridgeToken&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &quot;address&quot;: &quot;0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &quot;name&quot;: &quot;ETH.USDC&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response = requests.post(GRAPHQL_ENDPOINT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">             json = {&quot;query&quot;: query, &quot;variables&quot;: vars})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">print(response.json())</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;routingV2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bridgeableTokens&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;asset&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;53056b61-998a-4da5-a3f1-00e38182438a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;chain&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Avalanche&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;USD Coin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;asset&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;53056b61-998a-4da5-a3f1-00e38182438a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;chain&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Fantom&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;USD Coin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;asset&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;02fb8e38-58dc-4f06-b85f-f84b4a17e0bc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;chain&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Avalanche&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;USD Coin Avalanche Bridged (USDC.e)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;asset&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;53056b61-998a-4da5-a3f1-00e38182438a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;chain&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Arbitrum&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;USD Coin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;asset&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;53056b61-998a-4da5-a3f1-00e38182438a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;chain&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;BinanceSmartChain&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;USD Coin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;asset&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;53056b61-998a-4da5-a3f1-00e38182438a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;chain&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Polygon&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;USD Coin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}}]}}}</span></span></code></pre></div></div></div><p>A comprehensive routing example, from requesting a route to getting transaction data, is shown in the <a href="./overview">Overview</a> section.</p>`,16),h=[e];function l(p,k,r,E,d,o){return a(),i("div",null,h)}const c=s(t,[["render",l]]);export{F as __pageData,c as default};
